// This file is automatically generated by qtc from "sqlite.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line sqlite.qtpl:1
package templates

//line sqlite.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line sqlite.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line sqlite.qtpl:1
func StreamBuild(qw422016 *qt422016.Writer, tableName string, fields []string, fieldTypes []string) {
	//line sqlite.qtpl:1
	qw422016.N().S(`

import SQLite

let db = try Connection("path/to/db.sqlite3")

let users = Table("`)
	//line sqlite.qtpl:7
	qw422016.E().S(tableName)
	//line sqlite.qtpl:7
	qw422016.N().S(`")
`)
	//line sqlite.qtpl:8
	for i, field := range fields {
		//line sqlite.qtpl:8
		qw422016.N().S(`
let id = Expression<`)
		//line sqlite.qtpl:9
		qw422016.E().S(fieldTypes[i])
		//line sqlite.qtpl:9
		qw422016.N().S(`>("`)
		//line sqlite.qtpl:9
		qw422016.E().S(field)
		//line sqlite.qtpl:9
		qw422016.N().S(`")
`)
		//line sqlite.qtpl:10
	}
	//line sqlite.qtpl:10
	qw422016.N().S(`

`)
//line sqlite.qtpl:12
}

//line sqlite.qtpl:12
func WriteBuild(qq422016 qtio422016.Writer, tableName string, fields []string, fieldTypes []string) {
	//line sqlite.qtpl:12
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line sqlite.qtpl:12
	StreamBuild(qw422016, tableName, fields, fieldTypes)
	//line sqlite.qtpl:12
	qt422016.ReleaseWriter(qw422016)
//line sqlite.qtpl:12
}

//line sqlite.qtpl:12
func Build(tableName string, fields []string, fieldTypes []string) string {
	//line sqlite.qtpl:12
	qb422016 := qt422016.AcquireByteBuffer()
	//line sqlite.qtpl:12
	WriteBuild(qb422016, tableName, fields, fieldTypes)
	//line sqlite.qtpl:12
	qs422016 := string(qb422016.B)
	//line sqlite.qtpl:12
	qt422016.ReleaseByteBuffer(qb422016)
	//line sqlite.qtpl:12
	return qs422016
//line sqlite.qtpl:12
}
